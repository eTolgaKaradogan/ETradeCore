@model IEnumerable<ETradeBusiness.Models.ProductModel>

@{
    ViewData["Title"] = "Product List";
}


<div class="row">
    <div class="col-md-3">
        @await Component.InvokeAsync("Categories")
    </div>
    <div class="col-md-9">
        <h1>Product List</h1>
        <p>
            @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
            {
                <a asp-action="Create">Create New Product</a>
            }

        </p>
        <table id="products" class="display" style="width: 100%;">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnitPrice)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StockAmount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DisplayCategoryName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DisplayCreateDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DisplayUpdateDate)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UnitPrice)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StockAmount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DisplayCategoryName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DisplayCreateDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DisplayUpdateDate)
                        </td>
                        <td>
                            @if (User.Identity.IsAuthenticated && User.IsInRole("Admin")) // sayfada Edit kısmı sadece admin için olsun
                            {
                                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            }
                            @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("User")))
                            {
                                @:&nbsp; | <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                            }

                            @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                            {
                                @*<a asp-action="Delete" asp-route-id="@item.Id" class="deleteConfirm">Delete</a>*@
                                @*<input type="hidden" class="deleteId" value="@item.Id" />*@ // Id'yi görmemizi sağlamıştı hangi Id'yi silerken görmemiz için
                                <text>&nbsp;|</text>
                                <a href="#" onclick="deleteProduct(@item.Id);">Delete</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnitPrice)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StockAmount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DisplayCategoryName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DisplayCreateDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DisplayUpdateDate)
                    </th>
                </tr>
            </tfoot>
        </table>
    </div>
</div>

@section Scripts
{
    <link href="~/lib/datatables/css/jquery.dataTables.min.css" rel="stylesheet" />
    <script src="~/lib/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/lib/AlertifyJS/alertify.min.js"></script>
    <link href="~/lib/AlertifyJS/css/alertify.min.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {
            $('#products').DataTable({
                "language": {
                    //"url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Turkish.json"
                    //"url": "/Files/DataTableTurkish.json"
                }
            });
        });

        function deleteProduct(id) {
            alertify.confirm("Warning!", "Do you want to delete this product?",
                function () {
                    // alertify.success('Ok');
                    window.location.href = "/Products/Delete/" + id; // silme işlemi evet ise site'de buraya gitsin...
                },
                function () {
                    // alertify.error('Cancel');
                });
        }
    </script>
}
